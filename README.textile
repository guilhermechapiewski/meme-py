h1. meme-py

A Python client API to consume "Yahoo! Meme's":http://meme.yahoo.com webservices on "YQL":http://developer.yahoo.com/yql.

h2. How to install?

h3. From source:

"Download the source code":http://github.com/guilhermechapiewski/meme-py/archives/master here on Github, unzip/untar the archive, go to the extracted directory and type in the command line:

<pre><code>$ sudo python setup.py install</code></pre>

h3. From PyPI (easiest way):

You can also install the latest stable release from "PyPI":http://pypi.python.org/pypi/meme-py/ by typing:

<pre><code>$ sudo easy_install meme-py</code></pre>

h2. How to use?

Check it out some simple examples (for more please check "examples.py":http://github.com/guilhermechapiewski/meme-py/blob/master/examples.py file):

h3. Get popular posts:

<pre><code>  from meme import Meme
  Meme.Posts.popular()
</code></pre>

h3. Search posts:

<pre><code>  from meme import Meme
  posts = Meme.Posts.search('meme rocks')
  print '---------- Results for "meme rocks" ----------'
  for post in posts:
      print 'Content: %s' % post.content
      print 'Caption: %s' % post.caption
      print '----------------------------------------------'
</code></pre>

Make sure to check these "cool Meme search tips":http://meme.yahoo.com/api/p/40GGnCf/!

h3. Get info from a particular Meme:

<pre><code>  from meme import Meme
  meme = Meme.get(name='guilherme_chapiewski')
  print '========== guilherme_chapiewski Meme =========='
  print meme.title
  print meme.description 
  print meme.url
</code></pre>

h3. Get people that a Meme follows and it's followers:

<pre><code>  from meme import Meme
  meme = Meme.get(name='john')
  print meme.following(count=20) # people that "john" is following
  print meme.followers(count=20) # people that follows "john"
</code></pre>

h3. Get posts from a particular Meme:

<pre><code>  from meme import Meme
  meme = Meme.get(name='john')
  posts = meme.posts()
  print '---------- Results  ----------'
  for post in posts:
      print 'Type: %s' % post.type
      print 'Repost count: %s' % post.repost_count
      print 'Original: %s' % post.is_original # created by "john" (True) or reposted (False)
      print '----------------------------------------------'
</code></pre>

h3. Get the activity (reposts and comments) around a particular post:

<pre><code>  from meme import Meme
  meme = Meme.get(name='john')
  posts = meme.posts()
  latest_post = posts[0]
  print '---------- Results  ----------'
  for post in latest_post.activity():
      print 'Type: %s' % post.type #repost or commment
      print 'Comment: %s' % post.comment
      print 'GUID: %s' % post.guid
      print '----------------------------------------------'
</code></pre>

h3. Get the most reposted posts from an user:

<pre><code>  from meme import Meme
  meme = Meme.get(name='john')
  posts = meme.most_reposted_posts(media='text', count=2)
  print '---------- Results  ----------'
  for post in latest_post.activity():
      print 'Type: %s' % post.type #repost or commment
      print 'Comment: %s' % post.comment
      print 'GUID: %s' % post.guid
      print 'repost_count: %s' % post.repost_count
      print '----------------------------------------------'
</code></pre>

h2. How to report bugs

Go to the "Issues":http://github.com/guilhermechapiewski/meme-py/issues section and please provide as much detail as you can.

h2. How to contribute

Contributors are very welcome :) Go ahead and "fork the project":http://github.com/guilhermechapiewski/meme-py/fork here on Github and "request pull" when you are done.

*Please* try to follow "PEP-8":http://www.python.org/dev/peps/pep-0008/ rules and include unit tests!

h3. Contributors

  * "Diogo Baeder":http://github.com/diogobaeder ("@diogobaeder":http://twitter.com/diogobaeder)
  * "Hugo Lopes Tavares":http://github.com/hugobr ("@hltbra":http://twitter.com/hltbra)
  * "Matheus Mendes":http://github.com/bigodines ("@bigodines":http://twitter.com/bigodines)
  * "Pedro Valente":http://github.com/pvalente ("@pedrovalente":http://twitter.com/pedrovalente)

h2. Mailing list and further questions

If you want to contribute and still have some questions or if you are still having trouble using *meme-py*, join the "*meme-dev* group at Yahoo! Groups":http://tech.groups.yahoo.com/group/meme-dev/ where you will find other developers that use Yahoo! Meme and APIs for many programming languages.

h2. What is Meme?

Meme ("http://meme.yahoo.com":http://meme.yahoo.com) is a _light-blogging_ tool - which means that it is not as small and simple as "Twitter":http://twitter.com (micro-blogging) and not as big and full-featured as "Wordpress":http://wordpress.org (standard blogging) - created by "Yahoo!":http://yahoo.com in Brazil.

For more information about Yahoo! Meme please go to:
  * "Meme's Meme":http://meme.yahoo.com/meme/ (Meme news and general community updates)
  * "Meme API's Meme":http://meme.yahoo.com/api/ (Meme news about API improvements)
  * "About Yahoo! Meme":http://meme.yahoo.com/help/about/
  * "Meme API Guide":http://developer.yahoo.com/meme/guide/
